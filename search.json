[{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"introduction","dir":"Articles","previous_headings":"","what":"1. Introduction","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"Welcome tutorial AquaBEHER, R package designed estimate predict wet season calendar soil water balance agricultural applications. vignette provides practical guide using AquaBEHER. package integrates daily potential evapotranspiration (PET) soil water balance parameters compute wet season calendar (WSC) crop soil water management. Using parameters, AquaBEHER can estimate predict onset, cessation, duration wet season based agroclimatic approach. tutorial, learn : Install set AquaBEHER. Estimate potential evapotranspiration (PET) using different methods. Calculate daily soil water balance. Estimate wet season calendar using agroclimatic approach.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"installation-and-loading","dir":"Articles","previous_headings":"","what":"2. Installation and Loading","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"install latest development version AquaBEHER, use devtools. Ensure Rtools installed Windows full functionality.","code":"## Install required packages: # if (!require(\"pacman\")) install.packages(\"pacman\") # pacman::p_load(knitr, rmarkdown, prettydoc, dplyr, ggplot2, lubridate, # terra, devtools, ggrepel, zoo)  ## Install AquaBEHER from CRAN: # install.packages(\"AquaBEHER\")  ## Install AquaBEHER from GitHub: # devtools::install_github(\"RobelTakele/AquaBEHER\")  library(AquaBEHER) library(ggplot2) library(ggrepel) library(dplyr)"},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"required-climate-data","dir":"Articles","previous_headings":"","what":"3. Required Climate Data","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"evapotranspiration calculations, various meteorological geographical parameters needed, shown : Meteorological Data: Maximum minimum temperature Solar radiation Dew point temperature Wind speed Rainfall Geographical Data: Latitude Longitude Elevation","code":"data(AgroClimateData) str(AgroClimateData) #> 'data.frame':    14975 obs. of  14 variables: #>  $ GridID: chr  \"MOZ0007149\" \"MOZ0007149\" \"MOZ0007149\" \"MOZ0007149\" ... #>  $ Lat   : num  -15.1 -15.1 -15.1 -15.1 -15.1 ... #>  $ Lon   : num  39.3 39.3 39.3 39.3 39.3 ... #>  $ Elev  : num  392 392 392 392 392 ... #>  $ WHC   : num  97.8 97.8 97.8 97.8 97.8 ... #>  $ Year  : num  1982 1982 1982 1982 1982 ... #>  $ Month : num  1 1 1 1 1 1 1 1 1 1 ... #>  $ Day   : num  1 2 3 4 5 6 7 8 9 10 ... #>  $ Rain  : num  0 0 0 1.91 0 ... #>  $ Tmax  : num  32.2 33.1 33.5 32.8 32.7 ... #>  $ Tmin  : num  23.1 23.1 23.1 23.6 22.8 ... #>  $ Rs    : num  23.9 26.4 25 24.2 23.4 ... #>  $ Tdew  : num  20.2 20.5 20.5 20.8 21.4 ... #>  $ Uz    : num  4.72 4.28 3.62 2.54 1.48 ... head(AgroClimateData) #>       GridID       Lat     Lon     Elev      WHC Year Month Day     Rain #> 1 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   1 0.000000 #> 2 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   2 0.000000 #> 3 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   3 0.000000 #> 4 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   4 1.907393 #> 5 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   5 0.000000 #> 6 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   6 0.000000 #>       Tmax     Tmin       Rs     Tdew       Uz #> 1 32.24396 23.11500 23.86698 20.21160 4.723783 #> 2 33.07202 23.12585 26.38375 20.48284 4.279407 #> 3 33.49679 23.12602 25.00704 20.45689 3.622179 #> 4 32.76818 23.60351 24.16475 20.83896 2.535047 #> 5 32.65872 22.79294 23.44483 21.36882 1.477617 #> 6 31.80630 22.43975 21.99277 21.29297 1.953415"},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"potential-evapotranspiration","dir":"Articles","previous_headings":"","what":"4. Potential Evapotranspiration","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"Potential evapotranspiration (PET) vital agricultural water management. AquaBEHER offers multiple methods estimate PET, including FAO Penman-Monteith, Priestley-Taylor, Hargreaves-Samani formulations.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"usage","dir":"Articles","previous_headings":"4. Potential Evapotranspiration","what":"Usage:","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"PET <- calcEto(AgroClimateData, method = “PM”, crop = “short”) str(PET) daily estimations PET (mm/day) daily estimations extraterrestrial radiation (MJ/m2/day) daily estimations slope vapor pressure curve (kPa/°C)","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"example","dir":"Articles","previous_headings":"4. Potential Evapotranspiration","what":"Example:","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"calcEto function computes PET inputs data frame containing daily values meteorological parameters: Graphical comparison evapotranspiration (mm/day) calculated using FAO Penman–Monteith formulation Hargreaves-Samani formulation:  Key Insight: FAO Penman–Monteith formulation presents enhanced day--day variations evapotranspiration compared Hargreaves-Samani formulation.","code":"PET <- calcEto(AgroClimateData, method = \"PM\", crop = \"short\")  str(PET) #> List of 7 #>  $ ET.Daily      : num(0)  #>  $ Ra.Daily      : num [1:14975] 40.9 40.9 40.9 40.9 40.9 ... #>  $ Slope.Daily   : num [1:14975] 0.217 0.221 0.224 0.222 0.217 ... #>  $ Ea.Daily      : num [1:14975] 2.37 2.41 2.41 2.46 2.54 ... #>  $ Es.Daily      : num [1:14975] 3.82 3.94 4 3.94 3.85 ... #>  $ ET.formulation: chr \"Penman-Monteith FAO56\" #>  $ ET.type       : chr \"Reference Crop ET\" #>  - attr(*, \"class\")= chr \"PEToutList\" ## Compute PET using Hargreaves-Samani formulation using the sample data f ## rom 'AgroClimateData': Eto.HS <- calcEto(AgroClimateData, method = \"HS\")  ## Now compute PET using Penman-Monteith formulation: Eto.PM <- calcEto(AgroClimateData, method = \"PM\", Zh = 10)  plot(Eto.PM$ET.Daily[1:1000],   type = \"l\", xlab = \"Days since 1996\",   ylab = \"Eto (mm/day)\", col = \"black\", lwd = 1, lty = 2 ) lines(Eto.HS$ET.Daily[1:1000], col = \"blue\", lwd = 2, lty = 1)  legend(\"bottom\", c(\"Eto: Penman–Monteith\", \"Eto: Hargreaves-Samani\"),   horiz = TRUE, bty = \"n\", cex = 1, lty = c(2, 1),   lwd = c(2, 2), inset = c(1, 1),   xpd = TRUE, col = c(\"black\", \"blue\") )"},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"soil-water-balance","dir":"Articles","previous_headings":"","what":"5. Soil Water Balance","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"function performs daily computations soil water balance parameters root zone. Soil water changes daily response rainfall, evapotranspiration, runoff deep drainage. Assumptions Atmospheric conditions affect rate crops use water. soil uniform cross-section homogeneous volume measured depth unit area. well-established, dense grass crop growing, completely covers soil surface.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"usage-1","dir":"Articles","previous_headings":"5. Soil Water Balance","what":"Usage:","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"calcWatBal(data, soilWHC)","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"example-1","dir":"Articles","previous_headings":"5. Soil Water Balance","what":"Example:","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"calcWatBal compute inputs data frame containing daily values Rain, Eto soil water holding capacity.","code":"PET <- calcEto(AgroClimateData, method = \"PM\", Zh = 10)  ## Add the estimated PET 'ET.Daily' to a new column in AgroClimateData: AgroClimateData$Eto <- PET$ET.Daily  ## Estimate daily water balance for the soil having 100mm of soilWHC: soilWHC <- 100  watBal.list <- calcWatBal(data = AgroClimateData, soilWHC) watBal <- watBal.list$data  str(watBal) #> 'data.frame':    14975 obs. of  20 variables: #>  $ GridID: chr  \"MOZ0007149\" \"MOZ0007149\" \"MOZ0007149\" \"MOZ0007149\" ... #>  $ Lat   : num  -15.1 -15.1 -15.1 -15.1 -15.1 ... #>  $ Lon   : num  39.3 39.3 39.3 39.3 39.3 ... #>  $ Elev  : num  392 392 392 392 392 ... #>  $ WHC   : num  97.8 97.8 97.8 97.8 97.8 ... #>  $ Year  : num  1982 1982 1982 1982 1982 ... #>  $ Month : num  1 1 1 1 1 1 1 1 1 1 ... #>  $ Day   : num  1 2 3 4 5 6 7 8 9 10 ... #>  $ Rain  : num  0 0 0 0 0 ... #>  $ Tmax  : num  32.2 33.1 33.5 32.8 32.7 ... #>  $ Tmin  : num  23.1 23.1 23.1 23.6 22.8 ... #>  $ Rs    : num  23.9 26.4 25 24.2 23.4 ... #>  $ Tdew  : num  20.2 20.5 20.5 20.8 21.4 ... #>  $ Uz    : num  4.72 4.28 3.62 2.54 1.48 ... #>  $ Eto   : num  6.45 6.8 6.49 5.84 5.23 ... #>  $ R     : num  0 0 0 0 0 0 0 0 0.656 1 ... #>  $ AVAIL : num  0 0 0 0 0 ... #>  $ TRAN  : num  0 0 0 0 0 ... #>  $ DRAIN : num  0 0 0 0 0 0 0 0 0 0 ... #>  $ RUNOFF: num  0 0 0 0 0 ...  ## Filter the data for the years 2019 and 2020: watBal.19T20 <- watBal[watBal$Year %in% c(2019, 2020), ]  ## Create a date vector: date.vec <- as.Date(paste0(   watBal.19T20$Year, \"-\",   watBal.19T20$Month, \"-\",   watBal.19T20$Day ), format = \"%Y-%m-%d\")  ## Add the date vector to the data frame: watBal.19T20$date <- date.vec  ## Plotting the water balance output for the climatological year ## from 2019 to 2020 using ggplot2:  library(ggplot2) library(scales)  ggplot(data = watBal.19T20, aes(x = date)) +   geom_bar(aes(y = Rain),     stat = \"identity\", fill = \"#1f78b4\",     alpha = 0.6, width = 0.8   ) +   geom_line(aes(y = AVAIL), color = \"#33a02c\", size = 1.5) +   geom_line(aes(y = Eto),     color = \"#ff7f00\", size = 1.2,     linetype = \"dashed\"   ) +   scale_x_date(     date_labels = \"%b %Y\", date_breaks = \"1 month\",     expand = c(0.01, 0)   ) +   scale_y_continuous(     name = \"Available Soil Water (mm)\",     sec.axis = sec_axis(~., name = \"Rainfall (mm)\")   ) +   labs(     title = \"Rainfall, Available Soil Water and        Potential Evapotranspiration\",     subtitle = \"Data from 2019 to 2020\",     x = \" \",     y = \" \"   ) +   theme_minimal(base_size = 15) +   theme(     plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5),     plot.subtitle = element_text(size = 14, hjust = 0.5, color = \"grey40\"),     axis.title.y = element_text(color = \"#33a02c\"),     axis.title.y.right = element_text(color = \"#1f78b4\"),     axis.text.x = element_text(angle = 45, hjust = 1),     panel.grid.minor = element_blank(),     panel.grid.major = element_line(linetype = \"dotted\", color = \"grey80\")   )"},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"rainy-season-calendar","dir":"Articles","previous_headings":"","what":"6. Rainy Season Calendar","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"onset cessation dates wet season determined climatological year Figure 1. term climatological year represents period two driest periods, traditionally defined based calendar year starting driest month fixed length 12 months. Various methods developed estimate wet season calendar, .e. onset, cessation duration wet season. Common method used crop production applications agroclimatic approach. per agroclimatic approach, normal wet season (growing season) defined one excess precipitation potential evapotranspiration (PET). period meets evapotranspiration demands crops recharge moisture soil profile (FAO 1977; 1978; 1986). Thus, wet season calendar defined accordingly: Onset onset wet season start first day onsetWind.start, actual--potential evapotranspiration ratio greater 0.5 7 consecutive days, followed 20-day period plant available water remains wilting root zone soil layer. Cessation wet season end, cessation, first day onsetWind.end, actual--potential evapotranspiration ratio less 0.5 7 consecutive days, followed 12 consecutive non-growing days plant available water remains wilting root zone soil layer. Duration duration wet season total number days onset cessation season.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"usage-2","dir":"Articles","previous_headings":"6. Rainy Season Calendar","what":"Usage:","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"calcSeasCal(data, onsetWind.start, onsetWind.end, cessaWind.end, soilWHC)","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"example-2","dir":"Articles","previous_headings":"6. Rainy Season Calendar","what":"Example:","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"Using sample climate data provided AquaBEHER package, compute wet season calendar:","code":"## The wet season calendar is estimated for the onset window ranges from ## 01-September to 31-January having a soil with 80mm of soilWHC:  data(AgroClimateData)  PET <- calcEto(AgroClimateData, method = \"HS\") AgroClimateData$Eto <- PET$ET.Daily  soilWHC <- 80  watBal.list <- calcWatBal(data = AgroClimateData, soilWHC) watBal <- watBal.list$data  onsetWind.start <- \"10-01\" ## earliest possible start date of the onset window onsetWind.end <- \"01-31\" ## the latest possible date for end of the onset window cessaWind.end <- \"06-30\" ## the latest possible date for end of the cessation window  seasCal.dF <- calcSeasCal(   data = watBal, onsetWind.start,   onsetWind.end, cessaWind.end, soilWHC )  str(seasCal.dF) #> 'data.frame':    41 obs. of  8 variables: #>  $ Year          : num  1982 1983 1984 1985 1986 ... #>  $ OnsetDate     : Date, format: \"1982-11-11\" \"1983-12-10\" ... #>  $ OnsetDOY      : chr  \"315\" \"344\" \"314\" \"323\" ... #>  $ OnsetValue    : int  42 71 40 50 51 97 38 44 57 64 ... #>  $ CessationDate : Date, format: \"1983-05-12\" \"1984-04-15\" ... #>  $ CessationDOY  : chr  \"132\" \"106\" \"126\" \"126\" ... #>  $ CessationValue: int  224 198 218 218 201 205 215 219 214 232 ... #>  $ Duration      : num  182 127 178 168 150 108 177 175 157 168 ...  seasCal.dF$OnsetDate <- as.Date(seasCal.dF$OnsetDate) seasCal.dF$CessationDate <- as.Date(seasCal.dF$CessationDate)  max_onset <- max(seasCal.dF$OnsetValue, na.rm = TRUE) max_cessation <- max(seasCal.dF$CessationValue, na.rm = TRUE) max_value <- max(max_onset, max_cessation)    ggplot(seasCal.dF, aes(x = Year)) +   geom_line(aes(y = OnsetValue, color = \"Onset\"),     size = 1.5, linetype = \"solid\"   ) +   geom_line(aes(y = CessationValue, color = \"Cessation\"),     size = 1.5, linetype = \"dashed\"   ) +   geom_point(aes(y = OnsetValue, color = \"Onset\"),     size = 3,     shape = 21, fill = \"white\"   ) +   geom_point(aes(y = CessationValue, color = \"Cessation\"),     size = 3, shape = 21, fill = \"white\"   ) +   geom_text_repel(     aes(       y = OnsetValue,       label = ifelse(!is.na(OnsetDate),         format(OnsetDate, \"%Y-%m-%d\"), \"\"       ),       color = \"Onset\"     ),     size = 3,     box.padding = 0.5, point.padding = 0.5   ) +   geom_text_repel(     aes(       y = CessationValue,       label = ifelse(!is.na(CessationDate),         format(CessationDate, \"%Y-%m-%d\"), \"\"       ),       color = \"Cessation\"     ),     size = 3,     box.padding = 0.5, point.padding = 0.5   ) +   scale_y_continuous(     name = paste0(       \"Days Since: \",       format(         as.Date(paste0(           \"2023-\",           onsetWind.start         )),         \"%d %b\"       )     ),     breaks = seq(0, max_value, by = 10)   ) +   labs(     title = \"Onset and Cessation Dates of the Wet Season\",     x = \" \", color = \"Legend\"   ) +   theme_minimal(base_size = 14) +   theme(     plot.title = element_text(hjust = 0.5, face = \"bold\", size = 16),     legend.position = \"top\",     axis.title.x = element_text(face = \"bold\"),     axis.title.y = element_text(face = \"bold\"),     legend.title = element_text(face = \"bold\"),     legend.text = element_text(size = 12),     panel.grid.major = element_line(color = \"#e0e0e0\"),     panel.grid.minor = element_line(color = \"#f0f0f0\"),     panel.background = element_rect(fill = \"#f7f7f7\"),     plot.background = element_rect(fill = \"#f7f7f7\")   ) +   scale_color_manual(     name = \"Legend\",     values = c(       \"Onset\" = \"#1f77b4\",       \"Cessation\" = \"red\"     )   )"},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"seasonal-forecast-of-wsc","dir":"Articles","previous_headings":"","what":"7. Seasonal Forecast of WSC","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"seasonal forecast wet season calendar (WSC) variables .e Onset Cessation produced using tercile seasonal rainfall probabilities input using using Quantile Bin Resampling (QBR) method. QBR like concept analogue forecasting. resampling, historical WSC simulations categorized quantiles seasonal rainfall totals associated season (e.g., upper, middle lower tercile). Historical WSC outcomes can grouped according categories. can transform probabilistic forecasts rainfall quantiles WSC forecast ensemble size. last, ensemble members converted WSC tercile probability.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"usage-3","dir":"Articles","previous_headings":"7. Seasonal Forecast of WSC","what":"Usage:","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"seasFcstQBR(hisYearStart, hisYearEnd, rainTerc, seasRain, hisWSCvar, fcstVarName, tercileMethod)","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"example-3","dir":"Articles","previous_headings":"7. Seasonal Forecast of WSC","what":"Example:","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"","code":"## Load example data: data(AgroClimateData)  ## Estimate daily PET: PET <- calcEto(AgroClimateData, method = \"PM\", Zh = 10)  ## Add the estimated PET 'ET.Daily' to a new column in AgroClimateData: AgroClimateData$Eto <- PET$ET.Daily  ## Estimate daily water balance for the soil having 100mm of WHC: watBal.list <- calcWatBal(data = AgroClimateData, soilWHC = 100) watBal <- watBal.list$data  ## seasonal calendar is estimated for the onset window ranges from ## 01 September to 31 January having a soil with 100mm of WHC:  soilWHC <- 100 onsetWind.start <- \"09-01\" onsetWind.end <- \"01-31\" cessaWind.end <- \"06-30\"  seasCal.dF <- calcSeasCal(   data = watBal, onsetWind.start, onsetWind.end,   cessaWind.end, soilWHC )  ## Tercile Rainfall Probabilities of seasonal Forecast for OND, 2023: rainTerc <- data.frame(T1 = 0.15, T2 = 0.10, T3 = 0.75)  ## Summarize rainfall data for October to December: seasRain <- AgroClimateData %>%   filter(Month %in% c(10, 11, 12)) %>%   group_by(Year) %>%   summarize(sRain = sum(Rain))  ## Start of the historical resampling year hisYearStart <- 1991  ## End of the historical resampling year hisYearEnd <- 2022  ## Historical WSC Simulations: hisWSCvar <- seasCal.dF  ## WSC variable to forecast: fcstVarName <- \"Onset\" tercileMethod <- \"quantiles\"  SeasFcst.dF <- seasFcstQBR(   hisYearStart, hisYearEnd, rainTerc,   seasRain, hisWSCvar, fcstVarName,   tercileMethod )   ## Resafel the dataframe for ggplot: SeasFcst.dFgg <- data.frame(   Category = factor(     c(       \"BelowNormal\", \"Normal\",       \"AboveNormal\"     ),     levels = c(       \"BelowNormal\",       \"Normal\",       \"AboveNormal\"     )   ),   Probability = c(     (SeasFcst.dF$BelowNormal * 100),     (SeasFcst.dF$Normal * 100),     (SeasFcst.dF$AboveNormal * 100)   ) )  ## Create the bar plot: ggplot(SeasFcst.dFgg, aes(x = Category, y = Probability, fill = Category)) +   geom_bar(stat = \"identity\", width = 0.7) +   scale_fill_manual(values = c(     \"BelowNormal\" = \"#1f77b4\",     \"Normal\" = \"#ff7f0e\",     \"AboveNormal\" = \"#2ca02c\"   )) +   geom_text(aes(label = paste0(Probability, \"%\")),     vjust = -0.5,     size = 4, fontface = \"bold\"   ) +   labs(     title = \"Seasonal Forecast of the Onset of the Wet Season\",     x = \" \",     y = \"Probability (%)\"   ) +   theme_minimal() +   theme(     plot.title = element_text(hjust = 0.5, size = 16, face = \"bold\"),     axis.title.x = element_text(size = 14),     axis.title.y = element_text(size = 14),     legend.position = \"none\"   )"},{"path":"https://robeltakele.github.io/AquaBEHER/articles/AquaBEHER.html","id":"references","dir":"Articles","previous_headings":"","what":"8. References","title":"Estimation and Prediction of the Wet Season Calendar (WSC) Using a Daily Soil Water Balance Model for Agricultural Applications Using ``AquaBEHER``","text":"Allen, R.G.; Pereira, L.S.; Raes, D.; Smith, M. Crop Evapotranspiration: Guidelines Computing Crop Water Requirements; FAO Irrigation Drainage Paper . 56; FAO: Rome, Italy, 1998; ISBN 92-5-104219-5. Doorenbos, J. Pruitt, W.O. 1975. Guidelines predicting crop water requirements, Irrigation Drainage Paper 24, Food Agriculture Organization United Nations, Rome, 179 p. FAO, 1977. Crop water requirements. FAO Irrigation Drainage Paper . 24, Doorenbos J. W.O. Pruitt. FAO, Rome, Italy. FAO, 1986. Early Agrometeorological Crop Yield Forecasting. FAO Plant Production Protection Paper . 73, M. Frère G.F. Popov. FAO, Rome. Hargreaves, G.H. Samani, Z.. (1985) Reference Crop Evapotranspiration Temperature. Applied Engineering Agriculture, 1, 96-99. MacLeod D, Quichimbo EA, Michaelides K, Asfaw DT, Rosolem R, Cuthbert MO, et al. (2023) Translating seasonal climate forecasts water balance forecasts decision making. PLOS Clim 2(3): e0000138. https://doi.org/10.1371/journal.pclm.0000138 Priestley, C., & Taylor, R. (1972). assessment surface heat flux evaporation using large-scale parameters. Monthly Weather Review, 100(2), 81-92. van den Dool HM. New Look Weather Forecasting Analogues. Monthly Weather Review. 1989; 117(10):2230–2247. https://doi.org/10.1175/1520-0493(1989)117%3C2230:ANLAWF%3E2.0.CO;2  Genetics Group Institute Plant Sciences geographically culturally diverse research team working data-driven agricultural innovation combining crop genetics, climate, participatory approaches. based Scuola Superiore Sant’Anna, Pisa, Italy. can contact us sending email Matteo Dell’Acqua (mailto:m.dellacqua@santannapisa.) Mario Enrico Pè (mailto:m.pe@santannapisa.). can find us visiting group web page (http://www.capitalisegenetics.santannapisa./) Back Top","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robel Takele. Author, maintainer. Matteo Dell'Acqua. Author, contributor.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Robel Takele, Matteo Dell'Acqua (2023). AquaBEHER: Estimation Prediction Wet Season Calendar Soil Water Balance Agriculture. R package version 1.4.0. Available https://cran.r-project.org/web/packages/AquaBEHER","code":"@Manual{,   title = {AquaBEHER: Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture},   author = {Robel Takele and Matteo Dell'Acqua},   year = {2023},   note = {R package version 1.4.0},   url = {https://robeltakele.github.io/AquaBEHER/}, }"},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"id_-key-features","dir":"","previous_headings":"","what":"⛓ Key Features","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"Daily potential evapotranspiration (PET) estimation using various methods. Daily soil water balance estimation based adjustable soil water holding capacity (soilWHC). Onset wet season Cessation wet season Duration wet season AquaBEHER designed facilitate water-efficient agricultural practices response climate variability change.","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"install-from-cran","dir":"","previous_headings":"⬇️ Installation","what":"Install from CRAN:","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"","code":"install.packages(\"AquaBEHER\")"},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"install-the-development-version-from-github","dir":"","previous_headings":"⬇️ Installation","what":"Install the development version from GitHub:","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"view vignettes RStudio, run: details regarding AquaBEHER available package website, visit .","code":"# install.packages(\"devtools\") devtools::install_github(\"RobelTakele/AquaBEHER\") vignette(\"AquaBEHER\", \"AquaBEHER\")"},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"fast_forward-quick-example","dir":"","previous_headings":"","what":"⏩ Quick Example","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"’s quick example estimate daily soil water balance:","code":"library(AquaBEHER) data(AgroClimateData)  # Estimate PET using Penman-Monteith method PET <- calcEto(AgroClimateData, method = \"PM\", Zh = 10)  # Add PET to the dataset AgroClimateData$Eto <- PET$ET.Daily  # Estimate daily soil water balance for a soil with 100mm water holding capacity watBal.list <- calcWatBal(data = AgroClimateData, soilWHC = 100) watBal <- watBal.list$data head(watBal) #>       GridID       Lat     Lon     Elev      WHC Year Month Day Rain     Tmax #> 1 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   1    0 32.24396 #> 2 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   2    0 33.07202 #> 3 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   3    0 33.49679 #> 4 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   4    0 32.76818 #> 5 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   5    0 32.65872 #> 6 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   6    0 31.80630 #>       Tmin       Rs     Tdew       Uz      Eto R AVAIL TRAN DRAIN RUNOFF #> 1 23.11500 23.86698 20.21160 4.723783 6.447727 0     0    0     0      0 #> 2 23.12585 26.38375 20.48284 4.279407 6.802067 0     0    0     0      0 #> 3 23.12602 25.00704 20.45689 3.622179 6.485418 0     0    0     0      0 #> 4 23.60351 24.16475 20.83896 2.535047 5.838723 0     0    0     0      0 #> 5 22.79294 23.44483 21.36882 1.477617 5.231518 0     0    0     0      0 #> 6 22.43975 21.99277 21.29297 1.953415 5.026133 0     0    0     0      0"},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"bar_chart-visualization","dir":"","previous_headings":"","what":"📊 Visualization","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"Visualize daily soil water balance, rainfall, potential evapotranspiration (Eto) climatological year 2019–2020:","code":"library(ggplot2)  # Filter the data for 2019 and 2020 watBal.19T20 <- watBal[watBal$Year %in% c(2019, 2020), ] date.vec <- as.Date(paste(watBal.19T20$Year, watBal.19T20$Month, watBal.19T20$Day, sep = \"-\"), format = \"%Y-%m-%d\") watBal.19T20$date <- date.vec  # Plot water balance with ggplot2 ggplot(watBal.19T20, aes(x = date)) +   geom_bar(aes(y = Rain), stat = \"identity\", fill = \"#1f78b4\", alpha = 0.6, width = 0.8) +   geom_line(aes(y = AVAIL), color = \"#33a02c\", size = 1.5) +   geom_line(aes(y = Eto), color = \"#ff7f00\", size = 1.2, linetype = \"dashed\") +   scale_x_date(date_labels = \"%b %Y\", date_breaks = \"1 month\", expand = c(0.01, 0)) +   scale_y_continuous(     name = \"Available Soil Water (mm)\",     sec.axis = sec_axis(~., name = \"Rainfall (mm)\")   ) +   labs(     title = \"Rainfall, Available Soil Water, and Potential Evapotranspiration\",     subtitle = \"2019-2020 Data\",     x = NULL, y = NULL   ) +   theme_minimal(base_size = 15) +   theme(     plot.title = element_text(face = \"bold\", size = 18, hjust = 0.5),     plot.subtitle = element_text(size = 14, hjust = 0.5, color = \"grey40\"),     axis.text.x = element_text(angle = 45, hjust = 1),     panel.grid.minor = element_blank(),     panel.grid.major = element_line(linetype = \"dotted\", color = \"grey80\")   )"},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"memo-citation","dir":"","previous_headings":"","what":"📝 Citation","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"used AquaBEHER work, please cite . can view recent citation running:","code":"citation(package = \"AquaBEHER\") To cite `AquaBEHER` in publications, please use:    Robel Takele, Matteo Dell'Acqua (2023). `AquaBEHER`: Estimation and Prediction of Wet Season Calendar and Soil   Water Balance for Agriculture. R package version 1.0.0. Available at   https://cran.r-project.org/web/packages/AquaBEHER  A BibTeX entry for LaTeX users is:    @Manual{,     title = {`AquaBEHER`: Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture},     author = {Robel Takele and Matteo Dell'Acqua},     year = {2023},     note = {R package version 1.0.0},     url = {https://robeltakele.github.io/AquaBEHER/},   }"},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"earth_africa-feedback-and-contributions-","dir":"","previous_headings":"","what":"🌍 Feedback and Contributions 🤝","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"appreciate feedback contributions improve AquaBEHER. Feel free report bugs, suggest features, join discussions. contributions make difference! [!IMPORTANT] Submit issues join discussions . ✤ appreciate support look forward making package even better help!","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"mailbox_with_mail-contact-us","dir":"","previous_headings":"","what":"📬 Contact Us","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"Genetics Group Institute Plant Sciences culturally diverse, research-driven team focused advancing agricultural innovation. combine crop genetics, climate science, participatory strategies develop sustainable farming solutions. based Scuola Superiore Sant’Anna, Pisa, Italy. inquiries, please reach : - Matteo Dell’Acqua - Mario Enrico Pè Learn work institute web page.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"link-resources","dir":"","previous_headings":"","what":"🔗 Resources","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"AquaBEHER Documentation AquaBEHER GitHub Repository Scuola Superiore Sant’Anna","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"id_-show-your-support","dir":"","previous_headings":"","what":"🌟 Show Your Support","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"find AquaBEHER helpful interesting, please consider giving us star GitHub. support helps promote project lets others know ’s worth checking . 🙏 Thank support! 👍","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"id_-contributors","dir":"","previous_headings":"","what":"👥 Contributors","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"👨‍💻 Robel Takele       Email: takelerobel@mail.concordia.ca       GitHub: @RobelTakele 👨‍💻 Matteo Dell’Acqua       Email: m.dellacqua@santannapisa.      GitHub: @MatteoDellAcqua","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/index.html","id":"id_-license","dir":"","previous_headings":"👥 Contributors","what":"🄯 License","title":"Estimation and Prediction of Wet Season Calendar and Soil Water Balance for Agriculture","text":"project licensed GNU General Public License, GPL-3. Back Top","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/AgroClimateData.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily Surface Meteorological Data (1982-2022) Extracted from AgERA5 — AgroClimateData","title":"Daily Surface Meteorological Data (1982-2022) Extracted from AgERA5 — AgroClimateData","text":"AgERA5 dataset provides daily surface meteorological data period 1979 present input agriculture agro-ecological studies. dataset based hourly ECMWF ERA5 data surface level, data January 1, 1982, December 31, 2022, extracted grid located Angochen, Nampula province Mozambique.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/AgroClimateData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily Surface Meteorological Data (1982-2022) Extracted from AgERA5 — AgroClimateData","text":"","code":"data(AgroClimateData)"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/AgroClimateData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily Surface Meteorological Data (1982-2022) Extracted from AgERA5 — AgroClimateData","text":"data frame containing daily observations weather variables: GridID: Grid ID location. Lat: Latitude grid decimal degrees. Lon: Longitude grid decimal degrees. Elev: Elevation sea level meters. WHC: Water holding capacity millimeters (mm). Year: Year record (\"YYYY\"). Month: Month record (\"MM\"). Day: Day record (\"DD\"). Rain: Daily precipitation millimeters (mm/day). Tmax: Daily maximum temperature 2 meters height degrees Celsius (°C). Tmin: Daily minimum temperature 2 meters height degrees Celsius (°C). Rs: Total amount energy provided solar radiation surface period 00-24h local time per unit area time (MJ/m^2/day). Tdew: Mean dew point temperature height 2 meters surface period 00h-24h local time (°C). Uz: Mean wind speed height 2 meters surface period 00h-24h local time (m/s).","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/AgroClimateData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily Surface Meteorological Data (1982-2022) Extracted from AgERA5 — AgroClimateData","text":"https://cds.climate.copernicus.eu/cdsapp#!/dataset/sis-agrometeorological-indicators?tab=overview","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/AgroClimateData.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Daily Surface Meteorological Data (1982-2022) Extracted from AgERA5 — AgroClimateData","text":"AgERA5, 2021, Copernicus Climate Change Service (C3S), Fifth generation ECMWF atmospheric reanalysis global climate agriculture agro-ecological studies. Copernicus Climate Change Service Climate Data Store (CDS), July 2021.","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/reference/AgroClimateData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily Surface Meteorological Data (1982-2022) Extracted from AgERA5 — AgroClimateData","text":"","code":"## Load the agroclimate data data(AgroClimateData)  ## Get the structure of the data frame str(AgroClimateData) #> 'data.frame':\t14975 obs. of  14 variables: #>  $ GridID: chr  \"MOZ0007149\" \"MOZ0007149\" \"MOZ0007149\" \"MOZ0007149\" ... #>  $ Lat   : num  -15.1 -15.1 -15.1 -15.1 -15.1 ... #>  $ Lon   : num  39.3 39.3 39.3 39.3 39.3 ... #>  $ Elev  : num  392 392 392 392 392 ... #>  $ WHC   : num  97.8 97.8 97.8 97.8 97.8 ... #>  $ Year  : num  1982 1982 1982 1982 1982 ... #>  $ Month : num  1 1 1 1 1 1 1 1 1 1 ... #>  $ Day   : num  1 2 3 4 5 6 7 8 9 10 ... #>  $ Rain  : num  0 0 0 1.91 0 ... #>  $ Tmax  : num  32.2 33.1 33.5 32.8 32.7 ... #>  $ Tmin  : num  23.1 23.1 23.1 23.6 22.8 ... #>  $ Rs    : num  23.9 26.4 25 24.2 23.4 ... #>  $ Tdew  : num  20.2 20.5 20.5 20.8 21.4 ... #>  $ Uz    : num  4.72 4.28 3.62 2.54 1.48 ...  ## Get the head of the data frame head(AgroClimateData) #>       GridID       Lat     Lon     Elev      WHC Year Month Day     Rain #> 1 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   1 0.000000 #> 2 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   2 0.000000 #> 3 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   3 0.000000 #> 4 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   4 1.907393 #> 5 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   5 0.000000 #> 6 MOZ0007149 -15.09238 39.2519 392.1337 97.84914 1982     1   6 0.000000 #>       Tmax     Tmin       Rs     Tdew       Uz #> 1 32.24396 23.11500 23.86698 20.21160 4.723783 #> 2 33.07202 23.12585 26.38375 20.48284 4.279407 #> 3 33.49679 23.12602 25.00704 20.45689 3.622179 #> 4 32.76818 23.60351 24.16475 20.83896 2.535047 #> 5 32.65872 22.79294 23.44483 21.36882 1.477617 #> 6 31.80630 22.43975 21.99277 21.29297 1.953415"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcEto.html","id":null,"dir":"Reference","previous_headings":"","what":"Potential Evapotranspiration — calcEto","title":"Potential Evapotranspiration — calcEto","text":"Calculates Penman-Monteith, Priestley Taylor Hargreaves-Samani Potential Evapotranspiration using method described Allen et al, (1998)","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcEto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Potential Evapotranspiration — calcEto","text":"","code":"calcEto(data, method = \"PM\", crop = \"short\", Zh = NULL)"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcEto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Potential Evapotranspiration — calcEto","text":"data dataframe containing required weather variables following columns: Lat: Latitude site decimal degrees. Lon: Longitude site decimal degrees. Elev: Elevation sea level meters. Year: Year record \"YYYY\". Month: Month record \"MM\". Day: Day record \"DD\". Tmax: Daily maximum temperature 2-m height °C. Tmin: Daily minimum temperature 2-m height °C. Rs: Daily surface incoming solar radiation MJ/m^2/day. RH RHmax RHmin: Daily relative humidity 2-m height. Tdew: Daily dew point temperature 2-m height °C. U2 Uz: Daily wind speed 2-m custom height (m/s). method formulation used compute Eto; default \"PM\" Penman-Monteith, \"PT\" Priestley-Taylor, \"HS\" Hargreaves-Samani. crop Either \"short\" (default) FAO-56 hypothetical short grass \"tall\" ASCE-EWRI standard crop. Zh Height wind speed measurement meters.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcEto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Potential Evapotranspiration — calcEto","text":"list containing: ET.Daily: Daily estimations reference crop evapotranspiration (mm/day). Ra.Daily: Daily estimations extraterrestrial radiation (MJ/m^2/day). Slope.Daily: Daily estimations slope vapor pressure curve (kPa/°C). ET.type: Type estimation obtained.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcEto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Potential Evapotranspiration — calcEto","text":"Penman-Monteith: variables Tmax, Tmin, Rs, either U2 Uz, either RHmax RHmin RH Tdew available crop surface (short tall) specified, Penman-Monteith FAO56 formulation used (Allen et al. 1998). Priestley-Taylor: variables Tmax, Tmin, Rs, either RHmax RHmin RH Tdew available, Priestley-Taylor formulation used (Priestley Taylor, 1972). Hargreaves-Samani: Tmax Tmin available, Hargreaves-Samani formulation used estimating reference crop evapotranspiration (Hargreaves Samani, 1985).","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcEto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Potential Evapotranspiration — calcEto","text":"Allen, R.G., L.S. Pereira, D. Raes, M. Smith. 1998. Crop evapotranspiration-Guidelines Computing Crop Water requirements FAO Irrigation Drainage Paper 56. FAO, Rome 300: 6541. Allen, R. G. 2005. ASCE standardized reference evapotranspiration equation. Amer Society Civil Engineers. Guo, D., Westra, S., & Maier, H. (2016). R package modelling actual, potential reference evapotranspiration. Environmental Modelling & Software, 78, 216-224. doi:10.1016/j.envsoft.2015.12.019. Hargreaves, G.H., & Samani, Z.. (1985). Reference crop evapotranspiration ambient air temperature. American Society Agricultural Engineers. Priestley, C., & Taylor, R. (1972). assessment surface heat flux evaporation using large-scale parameters. Monthly Weather Review, 100(2), 81-92.","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcEto.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Potential Evapotranspiration — calcEto","text":"","code":"## Load sample data: data(climateData) PET.HS <- calcEto(climateData, method = \"HS\") #> Warning: Warning: There are 1562 missing values in the data:  Tmax #> Warning: Warning: There are 847 missing values in the data:  Tmin #> Warning: Warning: There are 2 instances where the maximum temperature is less than the minimum temperature. #> Adjusted 2 instances where Tmin was equal to or greater than Tmax.  ## Load sample data: data(AgroClimateData) PET.PM <- calcEto(AgroClimateData, method = \"PM\", crop = \"short\") #> Adjusted 0 instances where Tmin was equal to or greater than Tmax. #> Penman-Monteith FAO56 Reference Crop ET #> Evaporative surface: FAO-56 hypothetical short grass, albedo = 0.23 ; surface resistance = 70 sm^-1; crop height = 0.12 m; roughness height = 0.02 m #> Timestep: daily #> Units: mm #> Time duration: 1982-01-01 to 2022-12-31"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcSeasCal.html","id":null,"dir":"Reference","previous_headings":"","what":"Wet Season Calendar — calcSeasCal","title":"Wet Season Calendar — calcSeasCal","text":"Estimates wet season calendar, including onset date, cessation date, duration, based agroclimatic approach. function relies daily soil water balance parameters.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcSeasCal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wet Season Calendar — calcSeasCal","text":"","code":"calcSeasCal(data, onsetWind.start, onsetWind.end, cessaWind.end, soilWHC)"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcSeasCal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wet Season Calendar — calcSeasCal","text":"data R dataframe returned calcWatBal dataframe similar parameters. onsetWind.start earliest possible start date onset window \"MM-DD\" format. onsetWind.end latest possible end date onset window \"MM-DD\" format. cessaWind.end latest possible end date cessation window \"MM-DD\" format. soilWHC available soil water holding capacity root zone depth (mm).","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcSeasCal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wet Season Calendar — calcSeasCal","text":"dataframe containing following columns: Year year season (YYYY). OnsetDate onset date, formatted \"YYYY-MM-DD\". OnsetDOY Julian day (DOY) onset. OnsetValue number days since onsetWind.start. CessationDate cessation date, formatted \"YYYY-MM-DD\". CessationDOY Julian day (DOY) cessation. CessationValue number days since onsetWind.start. Duration duration wet season (days).","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcSeasCal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Wet Season Calendar — calcSeasCal","text":"agroclimatic approach defines wet season based balance precipitation potential evapotranspiration (PET). wet season begins moisture available crops exceeds evapotranspiration demands, ensuring optimal growth conditions. Onset: wet season onset defined first day onsetWind.start ratio actual evapotranspiration (AET) potential evapotranspiration (PET) exceeds 0.5 least 5 consecutive days, soil moisture remains 25% available soil water holding capacity (soilWHC) minimum 20 consecutive days, ensuring sufficient moisture availability plant growth. Cessation: wet season ends first day onsetWind.end AET/PET ratio falls 0.5 least 5 consecutive days, soil moisture remains 25% available soil water holding capacity (soilWHC) minimum 12 consecutive days. Duration: total duration wet season number days onset cessation.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcSeasCal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Wet Season Calendar — calcSeasCal","text":"FAO, 1977. Crop water requirements. FAO Irrigation Drainage Paper . 24, Doorenbos J. W.O. Pruitt. FAO, Rome, Italy. FAO, 1978. Forestry Local Community Development. FAO Forestry Paper . 7, FAO, Rome. FAO, 1986. Early Agrometeorological Crop Yield Forecasting. FAO Plant Production Protection Paper . 73, M. Frère G.F. Popov. FAO, Rome.","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcSeasCal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wet Season Calendar — calcSeasCal","text":"","code":"# \\donttest{ ## Load example data: data(AgroClimateData)  ## Estimate daily PET: PET <- calcEto(AgroClimateData, method = \"PM\", Zh = 10) #> Adjusted 0 instances where Tmin was equal to or greater than Tmax. #> Penman-Monteith FAO56 Reference Crop ET #> Evaporative surface: FAO-56 hypothetical short grass, albedo = 0.23 ; surface resistance = 70 sm^-1; crop height = 0.12 m; roughness height = 0.02 m #> Timestep: daily #> Units: mm #> Time duration: 1982-01-01 to 2022-12-31  ## Add the estimated PET 'ET.Daily' to a new column in AgroClimateData: AgroClimateData$Eto <- PET$ET.Daily  ## Estimate daily water balance for the soil having 100mm of WHC: watBal.list <- calcWatBal(data = AgroClimateData, soilWHC = 100) watBal <- watBal.list$data  ## seasonal calendar is estimated for the onset window ranges from ## 01 September to 31 January having a soil with 100mm of WHC:  soilWHC <- 100 onsetWind.start <- \"09-01\" onsetWind.end <- \"01-31\" cessaWind.end <- \"06-30\"  seasCal.dF <- calcSeasCal(   data = watBal, onsetWind.start, onsetWind.end,   cessaWind.end, soilWHC )  str(seasCal.dF) #> 'data.frame':\t41 obs. of  8 variables: #>  $ Year          : num  1982 1983 1984 1985 1986 ... #>  $ OnsetDate     : Date, format: \"1982-11-11\" \"1983-12-11\" ... #>  $ OnsetDOY      : chr  \"315\" \"345\" \"314\" \"323\" ... #>  $ OnsetValue    : int  72 102 70 80 81 132 97 74 87 94 ... #>  $ CessationDate : Date, format: \"1983-05-11\" \"1984-04-17\" ... #>  $ CessationDOY  : chr  \"131\" \"108\" \"128\" \"129\" ... #>  $ CessationValue: int  253 230 250 251 233 234 247 227 247 263 ... #>  $ Duration      : num  181 128 180 171 152 102 150 153 160 169 ... # }"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcWatBal.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily Soil Water Balance Estimation — calcWatBal","title":"Daily Soil Water Balance Estimation — calcWatBal","text":"Estimates daily soil water balance based simple mass balance budget approach. calculates amount water available root zone  homogeneous grass canopy growing well-drained, homogeneous soil.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcWatBal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily Soil Water Balance Estimation — calcWatBal","text":"","code":"calcWatBal(data, soilWHC)"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcWatBal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Daily Soil Water Balance Estimation — calcWatBal","text":"data data frame containing required input variables. data frame must include following columns: Lat: Latitude site (decimal degrees). Lon: Longitude site (decimal degrees). Elev: Elevation sea level (meters). Year: Year record (\"YYYY\"). Month: Month record (\"MM\"). Day: Day record (\"DD\"). Rain: Daily rainfall (mm). Eto: Daily potential evapotranspiration (mm). soilWHC Numeric. Water holding capacity soil (mm).","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcWatBal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Daily Soil Water Balance Estimation — calcWatBal","text":"list following components: data data frame containing results water balance calculations, following columns: DRAIN: Deep drainage (mm). TRAN: Water lost transpiration (mm). RUNOFF: Surface runoff (mm). AVAIL: Available soil moisture storage (mm). R: Ratio actual potential evapotranspiration. warnings list warnings related unrealistic adjusted values input data parameters used water balance calculations.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcWatBal.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Daily Soil Water Balance Estimation — calcWatBal","text":"Allen, R.G.; Pereira, L.S.; Raes, D.; Smith, M. (1998). Crop Evapotranspiration: Guidelines Computing Crop Water Requirements. FAO Irrigation Drainage Paper . 56, FAO: Rome, Italy. ISBN 92-5-104219-5. Doorenbos, J., & Pruitt, W.O. (1975). Guidelines Predicting Crop Water Requirements. Irrigation Drainage Paper 24, Food Agriculture Organization United Nations, Rome, 179 p.","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/reference/calcWatBal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily Soil Water Balance Estimation — calcWatBal","text":"","code":"# \\donttest{ ## Load sample data data(AgroClimateData)  # Estimate daily PET using the Penman-Monteith method PET.PM <- calcEto(AgroClimateData, method = \"PM\", Zh = 10) #> Adjusted 0 instances where Tmin was equal to or greater than Tmax. #> Penman-Monteith FAO56 Reference Crop ET #> Evaporative surface: FAO-56 hypothetical short grass, albedo = 0.23 ; surface resistance = 70 sm^-1; crop height = 0.12 m; roughness height = 0.02 m #> Timestep: daily #> Units: mm #> Time duration: 1982-01-01 to 2022-12-31  # Add the estimated PET to the AgroClimateData frame AgroClimateData$Eto <- PET.PM$ET.Daily  # Estimate daily soil water balance for a soil with 100 mm WHC watBal <- calcWatBal(data = AgroClimateData, soilWHC = 100) # }"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/climateData.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily Weather Data (1996-2020) from Angochen Weather Observing Station, Mozambique — climateData","title":"Daily Weather Data (1996-2020) from Angochen Weather Observing Station, Mozambique — climateData","text":"Contains daily weather data obtained Instituto Nacional de Meteorologia (INAM). sample data includes daily raw weather data January 1, 1996, December 31, 2020, weather station located Angochen, Nampula province Mozambique.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/climateData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily Weather Data (1996-2020) from Angochen Weather Observing Station, Mozambique — climateData","text":"","code":"data(climateData)"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/climateData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily Weather Data (1996-2020) from Angochen Weather Observing Station, Mozambique — climateData","text":"data frame containing daily values weather variables: Station_Name: Name weather station. Lat: Latitude site decimal degrees. Lon: Longitude site decimal degrees. Elev: Elevation sea level meters. Year: Year record (YYYY). Month: Month record (MM). Day: Day record (DD). Rain: Daily rainfall millimeters (mm). Tmax: Daily maximum temperature 2 meters height degrees Celsius (°C). Tmin: Daily minimum temperature 2 meters height degrees Celsius (°C).","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/climateData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Daily Weather Data (1996-2020) from Angochen Weather Observing Station, Mozambique — climateData","text":"INAM - Instituto Nacional de Meteorologia, Mozambique","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/reference/climateData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily Weather Data (1996-2020) from Angochen Weather Observing Station, Mozambique — climateData","text":"","code":"## Load the climate data data(climateData)  ## Get the structure of the data frame str(climateData) #> 'data.frame':\t9132 obs. of  10 variables: #>  $ Station_Name: chr  \"ANGOCHE\" \"ANGOCHE\" \"ANGOCHE\" \"ANGOCHE\" ... #>  $ Lat         : num  -16.2 -16.2 -16.2 -16.2 -16.2 ... #>  $ Lon         : num  39.9 39.9 39.9 39.9 39.9 ... #>  $ Elev        : num  25.2 25.2 25.2 25.2 25.2 ... #>  $ Year        : num  1996 1996 1996 1996 1996 ... #>  $ Month       : num  1 1 1 1 1 1 1 1 1 1 ... #>  $ Day         : num  1 2 3 4 5 6 7 8 9 10 ... #>  $ Rain        : num  0 0 7 0 0 0 0 7 0 0 ... #>  $ Tmax        : num  31.5 32 30 30.9 31.4 31.5 32 30 30.9 31.4 ... #>  $ Tmin        : num  22.5 22 22.8 24.5 24 22.5 22 22.8 24.5 24 ...  ## Get the head of the data frame head(climateData) #>   Station_Name      Lat     Lon  Elev Year Month Day Rain Tmax Tmin #> 1      ANGOCHE -16.2163 39.9145 25.19 1996     1   1    0 31.5 22.5 #> 2      ANGOCHE -16.2163 39.9145 25.19 1996     1   2    0 32.0 22.0 #> 3      ANGOCHE -16.2163 39.9145 25.19 1996     1   3    7 30.0 22.8 #> 4      ANGOCHE -16.2163 39.9145 25.19 1996     1   4    0 30.9 24.5 #> 5      ANGOCHE -16.2163 39.9145 25.19 1996     1   5    0 31.4 24.0 #> 6      ANGOCHE -16.2163 39.9145 25.19 1996     1   6    0 31.5 22.5"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/seasFcstQBR.html","id":null,"dir":"Reference","previous_headings":"","what":"Seasonal Forecast of Wet Season Calendar (WSC) from Tercile Rainfall Probabilities using Quantile Bin Resampling (QBR) — seasFcstQBR","title":"Seasonal Forecast of Wet Season Calendar (WSC) from Tercile Rainfall Probabilities using Quantile Bin Resampling (QBR) — seasFcstQBR","text":"Generates seasonal forecasts Wet Season Calendar (WSC) variables (onset cessation) using tercile seasonal rainfall probabilities","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/seasFcstQBR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Seasonal Forecast of Wet Season Calendar (WSC) from Tercile Rainfall Probabilities using Quantile Bin Resampling (QBR) — seasFcstQBR","text":"","code":"seasFcstQBR(   hisYearStart,   hisYearEnd,   rainTerc,   seasRain,   hisWSCvar,   fcstVarName,   tercileMethod )"},{"path":"https://robeltakele.github.io/AquaBEHER/reference/seasFcstQBR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Seasonal Forecast of Wet Season Calendar (WSC) from Tercile Rainfall Probabilities using Quantile Bin Resampling (QBR) — seasFcstQBR","text":"hisYearStart Starting year (YYYY) historical resampling. hisYearEnd Ending year (YYYY) historical resampling. rainTerc data frame tercile probabilities rainfall. Columns named \"T1\" (normal), \"T2\" (normal), \"T3\" (normal). seasRain data frame containing seasonal rainfall data columns hisWSCvar data frame containing historical WSC simulations. can output calcSeasCal function similar data frame required columns. fcstVarName character string indicating WSC variable forecast (\"Onset\" \"Cessation\"). tercileMethod options \"quantiles\" \"fixedValues\"","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/seasFcstQBR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Seasonal Forecast of Wet Season Calendar (WSC) from Tercile Rainfall Probabilities using Quantile Bin Resampling (QBR) — seasFcstQBR","text":"data frame containing tercile probabilities WSC variable (\"BelowNormal\", \"Normal\", \"AboveNormal\").","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/seasFcstQBR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Seasonal Forecast of Wet Season Calendar (WSC) from Tercile Rainfall Probabilities using Quantile Bin Resampling (QBR) — seasFcstQBR","text":"Uses QBR (Quantile Bin Resampling) produce forecasts onset cessation rainy season. first categorizes historical WSC simulations based seasonal rainfall terciles resamples based given rainfall probabilities generate ensemble forecasts.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/reference/seasFcstQBR.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Seasonal Forecast of Wet Season Calendar (WSC) from Tercile Rainfall Probabilities using Quantile Bin Resampling (QBR) — seasFcstQBR","text":"MacLeod D, Quichimbo EA, Michaelides K, Asfaw DT, Rosolem R, Cuthbert MO, et al. (2023) Translating seasonal climate forecasts water balance forecasts decision making. PLOS Clim 2(3): e0000138. https://doi.org/10.1371/journal.pclm.0000138 van den Dool HM. New Look Weather Forecasting Analogues. Monthly Weather Review. 1989; 117(10):2230–2247. https://doi.org/10.1175/1520-0493(1989)117%3C2230:ANLAWF%3E2.0.CO;2","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/reference/seasFcstQBR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Seasonal Forecast of Wet Season Calendar (WSC) from Tercile Rainfall Probabilities using Quantile Bin Resampling (QBR) — seasFcstQBR","text":"","code":"# \\donttest{ library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union  ## Load example data: data(AgroClimateData)  ## Estimate daily PET: PET <- calcEto(AgroClimateData, method = \"PM\", Zh = 10) #> Adjusted 0 instances where Tmin was equal to or greater than Tmax. #> Penman-Monteith FAO56 Reference Crop ET #> Evaporative surface: FAO-56 hypothetical short grass, albedo = 0.23 ; surface resistance = 70 sm^-1; crop height = 0.12 m; roughness height = 0.02 m #> Timestep: daily #> Units: mm #> Time duration: 1982-01-01 to 2022-12-31  ## Add the estimated PET 'ET.Daily' to a new column in AgroClimateData: AgroClimateData$Eto <- PET$ET.Daily  ## Estimate daily water balance for the soil having 100mm of WHC: watBal.list <- calcWatBal(data = AgroClimateData, soilWHC = 100) watBal <- watBal.list$data  ## seasonal calendar is estimated for the onset window ranges from ## 01 September to 31 January having a soil with 100mm of WHC:  soilWHC <- 100 onsetWind.start <- \"09-01\" onsetWind.end <- \"01-31\" cessaWind.end <- \"06-30\"  seasCal.dF <- calcSeasCal(   data = watBal, onsetWind.start, onsetWind.end,   cessaWind.end, soilWHC )  ## Tercile Rainfall Probabilities of seasonal Forecast for OND, 2023: rainTerc <- data.frame(T1 = 0.15, T2 = 0.10, T3 = 0.75)  ## Summarize rainfall data for October to December: seasRain <- AgroClimateData %>%   filter(Month %in% c(10, 11, 12)) %>%   group_by(Year) %>%   summarize(sRain = sum(Rain))  ## Start of the historical resampling year hisYearStart <- 1991  ## End of the historical resampling year hisYearEnd <- 2022  ## Historical WSC Simulations: hisWSCvar <- seasCal.dF  ## WSC variable to forecast: fcstVarName <- \"Onset\" tercileMethod <- \"quantiles\"  SeasFcst.dF <- seasFcstQBR(   hisYearStart, hisYearEnd, rainTerc,   seasRain, hisWSCvar, fcstVarName,   tercileMethod ) # }"},{"path":"https://robeltakele.github.io/AquaBEHER/news/index.html","id":"aquabeher-140","dir":"Changelog","previous_headings":"","what":"AquaBEHER 1.4.0","title":"AquaBEHER 1.4.0","text":"CRAN release: 2024-09-24","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/news/index.html","id":"id_-added-1-4-0","dir":"Changelog","previous_headings":"","what":"🆕 Added","title":"AquaBEHER 1.4.0","text":"🛠 Parameter Validation: improved robust version parameter validation checks, along additional data quality validation checks seasFcstQBR function. 🔍 Input Validation: Checks added hisYearStart, hisYearEnd, structure seasRain hisWSCvar. ❓ Null Missing Checks: Added .null .na checks rainTerc key data columns. ⚠ Unrealistic Data Warning: Warnings unrealistic hisWSCvar values (e.g., values outside 0-365 days) negative rainfall values. 📅 Year Filtering: Ensures seasRain hisWSC match years filtering. 🧪 Testing Structure: Established testing structure using testthat seasFcstQBR function. 📖 Documentation: Added Seasonal Forecast section vignette.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/news/index.html","id":"id_-changed-1-4-0","dir":"Changelog","previous_headings":"","what":"🔄 Changed","title":"AquaBEHER 1.4.0","text":"📚 Documentation: Improved documentation seasFcstQBR. 🔄 Function Name: Changed function name seasFcst seasFcstQBR. 📝 DESCRIPTION File: Edited DESCRIPTION file directed CRAN.","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/news/index.html","id":"id_-added-1-2-0","dir":"Changelog","previous_headings":"","what":"🆕 Added","title":"AquaBEHER 1.2.0","text":"📖 Citation Information: Citation details now included inst/CITATION, enabling proper referencing. 📊 CRAN Downloads Badge: badge displaying CRAN downloads added README track package usage. ✅ Data Quality Control: New data validation checks introduced ensure integrity inputs water balance calculations. include realistic value checks error handling. 🧪 Testing Structure: Established comprehensive unit tests calcWatBal calcSeasCal functions using testthat, ensuring better test coverage reliability. ⚙ Parameter Validation: Enhanced validation mechanisms calcSeasCal function ensure accurate input. Improvements include: 🔍 Consistency Checks: Ensures date-related columns (Year, Month, Day) complete contain missing values. 📅 Date Validation: Ensures onsetWind.start, onsetWind.end, cessaWind.end valid dates using lubridate::.Date(). 📐 Range Validation: Confirms R-index values fall 0 1, Soil Moisture values remain non-negative. 📏 Length Consistency: Ensures R-index Soil Moisture arrays match length Year column. 🌱 soilWHC Validation: Verifies soilWHC positive numeric value accurate soil water holding capacity calculations.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/news/index.html","id":"id_-changed-1-2-0","dir":"Changelog","previous_headings":"","what":"🔄 Changed","title":"AquaBEHER 1.2.0","text":"📦 Package Imports: Transitioned raster terra efficient spatial data processing. 📈 ‘calcWatBal’ Function: Now returns list includes: dataframe results. list warnings unrealistic adjusted values input data, making error tracing easier. 📅 Wet Season Calendar (WSC) Parameters: Improved logic criteria characterizing onset cessation wet season, ensuring accurate agroclimatic analysis.","code":""},{"path":[]},{"path":"https://robeltakele.github.io/AquaBEHER/news/index.html","id":"id_-added-1-0-0","dir":"Changelog","previous_headings":"","what":"🆕 Added","title":"AquaBEHER 1.0.0","text":"🛠 Error Handling: Enhanced error management missing unrealistic values, making package robust user-friendly. ⚖ Consistency Checks: Implemented validation ensure maximum temperature always greater minimum temperature, avoiding input errors. 📝 Documentation: Significantly improved package documentation better clarity completeness, including examples usage guidance. 🧪 Testing: Introduced unit testing calcEto function, improving reliability core calculations.","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/news/index.html","id":"aquabeher-010","dir":"Changelog","previous_headings":"","what":"AquaBEHER 0.1.0","title":"AquaBEHER 0.1.0","text":"CRAN release: 2023-03-31","code":""},{"path":"https://robeltakele.github.io/AquaBEHER/news/index.html","id":"id_-initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"🆕 Initial Release","title":"AquaBEHER 0.1.0","text":"🌱 AquaBEHER 0.1.0: Initial submission CRAN, introducing essential functionalities estimating soil water balance wet season characterization.","code":""}]
